setwd("C:/Users/parameeva/bigdataproject/statisticR/StaticticR")
install.packages("RJDBC")
library(RJDBC)
driver <- JDBC("oracle.jdbc.OracleDriver", classPath="C:/Users/parameeva/bigdataproject/statisticR/ojdbc6.jar", " ")
connection <- dbConnect(driver, "jdbc:oracle:thin:@10.154.109.255:1521:cdb", "system",
"welcome1")
connection <- dbConnect(driver, "jdbc:oracle:thin:@10.154.109.255:1521:cdb", "system",
"welcome1")
connection <- dbConnect(driver, "jdbc:oracle:thin:@10.154.109.255:1521:cdb", "system",
"welcome1")
connection <- dbConnect(driver, "jdbc:oracle:thin:@10.154.109.255:1521:cdb", "system",
"welcome1")
allSongsRecom <- dbGetQuery(connection, "select gender, to_number(substr(birthday, -4, 4)) year, recommend, g.title from profiles_hive p, likes_hive l, songs_hive s, genres_hive g where p.email=l.email and l.idsong=s.idsong and s.idgenre=g.idgenre")
View(allSongsRecom)
install.packages("rpart")
library(rpart)
attach(allSongsRecom)
tree.rp1 <- rpart(RECOMMEND~., allSongsRecom)
plot(tree.rp1)
text(tree.rp1, pretty=0)
install.packages("rpart.plot")
library(rpart.plot)
prp(tree.rp1)
tree.rp1
allSongsRecom <- dbGetQuery(connection, "select to_char(gender), to_number(substr(birthday, -4, 4)) year, to_char(recommend), g.title from profiles_hive p, likes_hive l, songs_hive s, genres_hive g where p.email=l.email and l.idsong=s.idsong and s.idgenre=g.idgenre")
allSongsRecom <- dbGetQuery(connection, "select to_char(gender) gender, to_number(substr(birthday, -4, 4)) year, to_char(recommend) recommend, g.title from profiles_hive p, likes_hive l, songs_hive s, genres_hive g where p.email=l.email and l.idsong=s.idsong and s.idgenre=g.idgenre")
attach(allSongsRecom)
tree.rp1 <- rpart(RECOMMEND~., allSongsRecom)
prp(tree.rp1)
tree.rp1
allSongsRecom <- dbGetQuery(connection, "select decode(gender, 1, 'M', 0, 'F') gender, to_number(substr(birthday, -4, 4)) year, decode(recommend, 0, 'N', 1, 'Y') recommend, g.title from profiles_hive p, likes_hive l, songs_hive s, genres_hive g where p.email=l.email and l.idsong=s.idsong and s.idgenre=g.idgenre")
allSongsRecom <- dbGetQuery(connection, "select decode(gender, 1, 'M', 2, 'F') gender, to_number(substr(birthday, -4, 4)) year, decode(recommend, 0, 'N', 1, 'Y') recommend, g.title from profiles_hive p, likes_hive l, songs_hive s, genres_hive g where p.email=l.email and l.idsong=s.idsong and s.idgenre=g.idgenre")
tree.rp1 <- rpart(RECOMMEND~., allSongsRecom)
tree.rp1
plot(tree.rp1)
text(tree.rp1, pretty=0)
result.rp1 <- predict(tree.rp1, allSongsRecom, type="class")
allSongsRecom_ER <- dbGetQuery(connection, "select p.email, decode(gender, 1, 'M', 2, 'F') gender, to_number(substr(birthday, -4, 4)) year, decode(recommend, 0, 'N', 1, 'Y') recommend, g.title from profiles_hive p, likes_hive l, songs_hive s, genres_hive g where p.email=l.email and l.idsong=s.idsong and s.idgenre=g.idgenre")
result.rp1 <- predict(tree.rp1, allSongsRecom_ER, type="class")
result.rp1
table(result.rp1)
table(result.rp1, allSongsRecom$RECOMMEND)
result.rp1 <- predict(tree.rp1, allSongsRecom_ER)
result.rp1
table(result.rp1, allSongsRecom$RECOMMEND)
table(result.rp1, allSongsRecom$RECOMMEND)
allSongsRecom_ER_pro <- dbGetQuery(connection, "select p.email, decode(gender, 1, 'M', 2, 'F') gender, to_number(substr(birthday, -4, 4)) year, g.title from profiles_hive p, (select g.title from genres_hive g where g.idgenre in (1, 7, 8)) g")
result.rp1 <- predict(tree.rp1, allSongsRecom_ER, type="class")
prediction <- predict(tree.rp1, allSongsRecom_ER_pro)
table(prediction)
prediction
View(allSongsRecom_ER_pro)
allSongsRecom_ER_pro <- dbGetQuery(connection, "select p.email, decode(gender, 1, 'M', 2, 'F') gender, to_number(substr(birthday, -4, 4)) year, g.title from profiles_hive p, (select g.title from genres_hive g where g.idgenre in (1, 7, 8)) g where p.email not in (select distinct email from likes_hive)")
prediction <- predict(tree.rp1, allSongsRecom_ER_pro)
table(prediction)
prediction
View(prediction)
answer <- data.frame(allSongsRecom_ER_pro, prediction)
View(answer)
View(allSongsRecom)
View(answer)
install.packages("rattle")
rattle()
library(rattle)
rattle()
fit <-rpart(GENDER, method = "class", answer)
attach(answer)
fit <-rpart(GENDER, method = "class", answer)
fit <-rpart(answer$GENDER, method = "class", answer)
fit <-rpart(answer$GENDER ~ answer$Y, method = "class", answer)
plotcp(fit)
plocp(fit)
printcp(fit)
plot(fit, uniform=TRUE, main="tree")
View(allSongsRecom)
View(allSongsRecom)
dbDisconnect(connection)
