setwd("C:/Users/parameeva/bigdataproject/statisticR/r_statistic_project")
install.packages("RJDBC")
library(RJDBC)
driver <- JDBC("oracle.jdbc.OracleDriver", classPath="C:/Users/parameeva/bigdataproject/statisticR/ojdbc6.jar", " ")
connection <- dbConnect(driver, "jdbc:oracle:thin:@192.168.205.198:1521:cdb", "system","welcome1")
allSongsLikes <- dbGetQuery(connection, "select s.year, s.gender, s.idsong, s.lk from (select p.email, to_number(substr(p.birthday, -4, 4)) year, decode(p.gender, 1, 'M', 2, 'F') gender, s.idsong, decode(l.RECOMMEND, null, 'N', 'Y') lk from profiles_hive p, SONGS_HIVE s, genres_hive g, LIKES_HIVE l where s.IDGENRE=g.IDGENRE and l.IDSONG(+)=s.IDSONG and p.EMAIL=l.email(+)) s where s.email in (select DISTINCT EMAIL from LIKES_HIVE)")
tree.rp1 <- rpart(LK~., allSongsLikes)
install.packages("rpart")
library(rpart)
tree.rp1 <- rpart(LK~., allSongsLikes)
allSongsLikes_ER <- dbGetQuery(connection, "select s.email, s.year, s.gender, s.idsong from (select p.email, to_number(substr(p.birthday, -4, 4)) year, decode(p.gender, 1, 'M', 2, 'F') gender, s.idsong from profiles_hive p, SONGS_HIVE s) s")
prediction <- predict(tree.rp1, allSongsLikes_ER)
answerLikes <- data.frame(email = allSongsLikes_ER$EMAIL, idsong = allSongsLikes_ER$IDSONG, probability = prediction[,'Y'])
View(answerLikes)
options(java.parameters = "-Xmx8g")
cp = c("C:/Users/parameeva/bigdataproject/statisticR/hive/hive-jdbc.jar", "C:/Users/parameeva/bigdataproject/statisticR/hadoop/client/hadoop-common.jar", "C:/Users/parameeva/bigdataproject/statisticR/hive/libthrift-0.9.2.jar", "C:/Users/parameeva/bigdataproject/statisticR/hive/hive-service.jar", "C:/Users/parameeva/bigdataproject/statisticR/hive/httpclient-4.2.5.jar", "C:/Users/parameeva/bigdataproject/statisticR/hive/httpcore-4.2.5.jar", "C:/Users/parameeva/bigdataproject/statisticR/hive/hive-jdbc-standalone.jar")
.jinit(classpath=cp)
.jclassPath()
hiveDriver <- JDBC("org.apache.hive.jdbc.HiveDriver", "C:/Users/parameeva/bigdataproject/statisticR/hive/hive-jdbc.jar", identifier.quote="`")
hiveConnection <- dbConnect(hiveDriver, "jdbc:hive2://192.168.205.198:10000/", "oracle", "welcome1")
show_databases <- dbGetQuery(hiveConnection, "show databases")
show_databases
dbDisconnect(hiveConnection)
q()
options(java.parameters = "-Xmx8g")
cp = c("C:/Users/parameeva/bigdataproject/statisticR/lib/hive-jdbc.jar",
"C:/Users/parameeva/bigdataproject/statisticR/lib/hadoop-common.jar",
"C:/Users/parameeva/bigdataproject/statisticR/lib/libthrift-0.9.2.jar",
"C:/Users/parameeva/bigdataproject/statisticR/lib/hive-service.jar",
"C:/Users/parameeva/bigdataproject/statisticR/lib/httpclient-4.2.5.jar",
"C:/Users/parameeva/bigdataproject/statisticR/lib/httpcore-4.2.5.jar",
"C:/Users/parameeva/bigdataproject/statisticR/lib/hive-jdbc-standalone.jar")
.jinit(classpath=cp)
.jclassPath()
hiveDriver <- JDBC("org.apache.hive.jdbc.HiveDriver", "C:/Users/parameeva/bigdataproject/statisticR/lib/hive-jdbc.jar", identifier.quote="`")
hiveConnection <- dbConnect(hiveDriver, "jdbc:hive2://192.168.205.198:10000/", "oracle", "welcome1")
show_databases <- dbGetQuery(hiveConnection, "show databases")
show_databases
dbWriteTable(hiveConnection, 'predictions', answerLikes)
dbSendUpdate(hiveConnection, 'create table predictions(email string, idsong string, probability double)')
dbSendUpdate(hiveConnection, 'create table predictions(email string, idsong string, probability double)')
dbWriteTable(hiveConnection, 'predictions', answerLikes)
dbWriteTable(hiveConnection, 'predictions', answerLikes)
dbWriteTable(hiveConnection, 'predictions', answerLikes)
dbWriteTable(hiveConnection, 'predictions', answerLikes)
dbWriteTable(hiveConnection, 'predictions', answerLikes)
dbSendUpdate(hiveConnection, 'create table predictions(email string, idsong string, probability double)')
dbSendUpdate(hiveConnection, 'create table predictions(email string, idsong string, probability double)')
answerLikesTest <- answerLikes[1:5,]
View(answerLikesTest)
for (i in 1:nrow(answerLikesTest)) {
row <- answerLikesTest[i,]
dbSendUpdate(hiveConnection, "insert into predictions values (?, ?, ?)", row[1], row[2], row[3])
}
row <- answerLikesTest[1,]
row
row[1]
row[,1]
dbSendUpdate(hiveConnection, "insert into predictions values (?, ?, ?)", "row[1]", "row[2]", "row[3]")
View(row)
View(row[1])
dbSendUpdate(hiveConnection, "insert into predictions values (?, ?, ?)", as.character(row[1]), as.character(row[2]), row[3])
paste(paste(paste("insert into predictions values ('", row[1], ""),
paste("', '", row[2], ""), "") "', ?)", "")
paste("', '", row[2], "")
paste("', '", as.character(row[2]), "")
as.character(row[2])
row[2]
toString(row[2])
row[2]
row[2, 1]
row[2, 2]
row[,2]
row[,1]
toString(row[,1])
row
dbSendUpdate(hiveConnection, "insert into predictions values (?, ?, ?)", row[,1], row[,2], row[,3])
dbSendUpdate(hiveConnection, 'drop table predictions')
dbSendUpdate(hiveConnection, 'create table predictions(email string, idsong string, probability double)')
dbSendUpdate(hiveConnection, 'create table predictions(email string, idsong string, probability double)')
for (i in 1:nrow(answerLikesTest)) {
row <- answerLikesTest[i,]
dbSendUpdate(hiveConnection, "insert into predictions values (?, ?, ?)", row[,1], row[,2], row[,3])
}
dbDisconnect(hiveConnection)
View(show_databases)
